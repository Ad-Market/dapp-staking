{
  "contractName": "HappyChef",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Happy",
          "name": "_happy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "happy",
      "outputs": [
        {
          "internalType": "contract Happy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Happy\",\"name\":\"_happy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"happy\",\"outputs\":[{\"internalType\":\"contract Happy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/ws/alyra/dapp-staking/contracts/HappyChef.sol\":\"HappyChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/ws/alyra/dapp-staking/contracts/Happy.sol\":{\"keccak256\":\"0x280792ab5faa1ea5b626f3424fbb792a1666089a1cfa704103a5d15715c24df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7f24d795bb63deb18696903587d2d0efa4712b9d32789b906bf92fb629060b5\",\"dweb:/ipfs/QmRYeZeJ3NsVdV5hm3gt7PSv2gH9BEHGVcpLK9ycokPFeP\"]},\"/C/ws/alyra/dapp-staking/contracts/HappyChef.sol\":{\"keccak256\":\"0x2cc427378d88aefc989532cd2778de035a42f65f8802e03b84890a7d50f8f407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b85bf5243c4f83b506db58f95e19109a56fd468367220d0cf394092e9c74a93\",\"dweb:/ipfs/QmYyEuXjYv8Zw2RDqg5YQUua4wjuRKbQoTbhE8cx5xPafr\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161080838038061080883398181016040528101906100329190610144565b600061004261012760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101c8565b600033905090565b60008151905061013e816101b1565b92915050565b60006020828403121561015657600080fd5b60006101648482850161012f565b91505092915050565b600061017882610191565b9050919050565b600061018a8261016d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101ba8161017f565b81146101c557600080fd5b50565b610631806101d76000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063e0d7cb6f14610079578063f2fde38b14610097575b600080fd5b6100596100b3565b005b6100636101ed565b604051610070919061048f565b60405180910390f35b610081610216565b60405161008e91906104aa565b60405180910390f35b6100b160048036038101906100ac9190610402565b61023c565b005b6100bb6103e5565b73ffffffffffffffffffffffffffffffffffffffff166100d96101ed565b73ffffffffffffffffffffffffffffffffffffffff161461012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610126906104e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102446103e5565b73ffffffffffffffffffffffffffffffffffffffff166102626101ed565b73ffffffffffffffffffffffffffffffffffffffff16146102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af906104e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f906104c5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506103fc816105e4565b92915050565b60006020828403121561041457600080fd5b6000610422848285016103ed565b91505092915050565b61043481610516565b82525050565b61044381610548565b82525050565b6000610456602683610505565b91506104618261056c565b604082019050919050565b6000610479602083610505565b9150610484826105bb565b602082019050919050565b60006020820190506104a4600083018461042b565b92915050565b60006020820190506104bf600083018461043a565b92915050565b600060208201905081810360008301526104de81610449565b9050919050565b600060208201905081810360008301526104fe8161046c565b9050919050565b600082825260208201905092915050565b600061052182610528565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105538261055a565b9050919050565b600061056582610528565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105ed81610516565b81146105f857600080fd5b5056fea2646970667358221220c6359e0faadc8f8af1739ca17b50e4859010e68dfe86847b1cee2e876c48afe464736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063e0d7cb6f14610079578063f2fde38b14610097575b600080fd5b6100596100b3565b005b6100636101ed565b604051610070919061048f565b60405180910390f35b610081610216565b60405161008e91906104aa565b60405180910390f35b6100b160048036038101906100ac9190610402565b61023c565b005b6100bb6103e5565b73ffffffffffffffffffffffffffffffffffffffff166100d96101ed565b73ffffffffffffffffffffffffffffffffffffffff161461012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610126906104e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102446103e5565b73ffffffffffffffffffffffffffffffffffffffff166102626101ed565b73ffffffffffffffffffffffffffffffffffffffff16146102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af906104e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f906104c5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000813590506103fc816105e4565b92915050565b60006020828403121561041457600080fd5b6000610422848285016103ed565b91505092915050565b61043481610516565b82525050565b61044381610548565b82525050565b6000610456602683610505565b91506104618261056c565b604082019050919050565b6000610479602083610505565b9150610484826105bb565b602082019050919050565b60006020820190506104a4600083018461042b565b92915050565b60006020820190506104bf600083018461043a565b92915050565b600060208201905081810360008301526104de81610449565b9050919050565b600060208201905081810360008301526104fe8161046c565b9050919050565b600082825260208201905092915050565b600061052182610528565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105538261055a565b9050919050565b600061056582610528565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105ed81610516565b81146105f857600080fd5b5056fea2646970667358221220c6359e0faadc8f8af1739ca17b50e4859010e68dfe86847b1cee2e876c48afe464736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:991:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "82:92:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "92:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "107:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "101:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "92:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "162:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Happy_$13",
                      "nodeType": "YulIdentifier",
                      "src": "123:38:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "123:45:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "123:45:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Happy_$13_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "60:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "68:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "76:5:7",
                "type": ""
              }
            ],
            "src": "7:167:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "269:219:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "315:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "324:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "327:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "317:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "317:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "317:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "290:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "299:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "286:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "311:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "282:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "282:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "279:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "341:140:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "356:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "370:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "360:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "385:86:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "443:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "454:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "439:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "439:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "463:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Happy_$13_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "395:43:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "395:76:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "385:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Happy_$13_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "239:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "250:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "262:6:7",
                "type": ""
              }
            ],
            "src": "180:308:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "539:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "549:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "578:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "560:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "549:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "521:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "531:7:7",
                "type": ""
              }
            ],
            "src": "494:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "653:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "663:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "692:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "674:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "663:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Happy_$13",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "635:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "645:7:7",
                "type": ""
              }
            ],
            "src": "596:108:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "755:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "765:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "780:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "787:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "776:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "765:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "737:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "747:7:7",
                "type": ""
              }
            ],
            "src": "710:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "897:91:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "966:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "975:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "978:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "968:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "968:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "968:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "920:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "957:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Happy_$13",
                              "nodeType": "YulIdentifier",
                              "src": "927:29:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "927:36:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "917:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:47:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:55:7"
                  },
                  "nodeType": "YulIf",
                  "src": "907:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Happy_$13",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "890:5:7",
                "type": ""
              }
            ],
            "src": "842:146:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Happy_$13_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Happy_$13(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Happy_$13_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Happy_$13_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Happy_$13(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Happy_$13(value) {\n        if iszero(eq(value, cleanup_t_contract$_Happy_$13(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4019:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "7:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:7",
                "type": ""
              }
            ],
            "src": "152:262:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:7",
                "type": ""
              }
            ],
            "src": "420:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "621:78:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "638:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "686:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Happy_$13_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "643:42:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "643:49:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "631:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "631:62:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "631:62:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Happy_$13_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "609:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "616:3:7",
                "type": ""
              }
            ],
            "src": "544:155:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "851:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "861:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "927:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "932:2:7",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "868:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "861:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1033:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "944:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "944:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "944:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1046:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1057:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1062:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1053:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1046:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "839:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "847:3:7",
                "type": ""
              }
            ],
            "src": "705:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1223:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1233:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1299:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1304:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1240:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1233:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1405:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "1316:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1316:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1418:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1429:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1425:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1425:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1418:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1211:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1219:3:7",
                "type": ""
              }
            ],
            "src": "1077:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1547:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1557:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1569:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1580:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1565:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1557:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1637:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1650:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1661:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1646:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1646:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1593:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1593:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1519:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1531:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1542:4:7",
                "type": ""
              }
            ],
            "src": "1449:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1787:136:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1797:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1809:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1820:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1805:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1797:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1889:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1902:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1913:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1898:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1898:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Happy_$13_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1833:55:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1833:83:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1833:83:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Happy_$13__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1759:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1771:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1782:4:7",
                "type": ""
              }
            ],
            "src": "1677:246:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2100:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2110:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2122:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2133:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2118:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2118:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2110:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2157:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2168:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2153:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2153:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2176:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2182:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2172:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2172:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2202:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2336:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2210:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2210:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2202:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2080:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2095:4:7",
                "type": ""
              }
            ],
            "src": "1929:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2525:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2535:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2547:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2558:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2543:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2535:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2582:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2593:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2578:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2578:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2601:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2607:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2597:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2597:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2571:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2571:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2627:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2761:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2635:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2635:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2627:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2505:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2520:4:7",
                "type": ""
              }
            ],
            "src": "2354:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2875:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2892:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2897:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2885:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2885:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2913:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2932:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2937:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2928:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2928:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2913:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2847:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2852:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2863:11:7",
                "type": ""
              }
            ],
            "src": "2779:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2999:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3009:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3038:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3020:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3020:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3009:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2981:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2991:7:7",
                "type": ""
              }
            ],
            "src": "2954:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3101:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3111:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3126:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3133:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3122:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3122:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3111:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3083:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3093:7:7",
                "type": ""
              }
            ],
            "src": "3056:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3260:78:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3270:62:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3326:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Happy_$13_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3283:42:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:49:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3270:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Happy_$13_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3240:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3250:9:7",
                "type": ""
              }
            ],
            "src": "3188:150:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3416:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3426:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3457:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3439:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3439:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3426:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Happy_$13_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3396:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3406:9:7",
                "type": ""
              }
            ],
            "src": "3344:125:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3581:119:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3603:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3611:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3599:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:14:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3615:34:7",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3671:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3679:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3667:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3667:15:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3684:8:7",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3660:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3660:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3660:33:7"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3573:6:7",
                "type": ""
              }
            ],
            "src": "3475:225:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3812:76:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3834:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3842:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3830:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3830:14:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3846:34:7",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3823:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3823:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3823:58:7"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3804:6:7",
                "type": ""
              }
            ],
            "src": "3706:182:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3937:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3994:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4003:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4006:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3996:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3996:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3996:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3960:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3985:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3967:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3967:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3957:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3957:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3950:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3947:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3930:5:7",
                "type": ""
              }
            ],
            "src": "3894:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Happy_$13_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Happy_$13_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Happy_$13__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Happy_$13_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_Happy_$13_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Happy_$13_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Happy_$13_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "140:157:1:-:0;;;233:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:3;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;278:6:1;270:5;;:14;;;;;;;;;;;;;;;;;;233:59;140:157;;586:96:6;639:7;665:10;658:17;;586:96;:::o;7:167:7:-;;107:6;101:13;92:22;;123:45;162:5;123:45;:::i;:::-;82:92;;;;:::o;180:308::-;;311:2;299:9;290:7;286:23;282:32;279:2;;;327:1;324;317:12;279:2;370:1;395:76;463:7;454:6;443:9;439:22;395:76;:::i;:::-;385:86;;341:140;269:219;;;;:::o;494:96::-;;560:24;578:5;560:24;:::i;:::-;549:35;;539:51;;;:::o;596:108::-;;674:24;692:5;674:24;:::i;:::-;663:35;;653:51;;;:::o;710:126::-;;787:42;780:5;776:54;765:65;;755:81;;;:::o;842:146::-;927:36;957:5;927:36;:::i;:::-;920:5;917:47;907:2;;978:1;975;968:12;907:2;897:91;:::o;140:157:1:-;;;;;;;",
  "deployedSourceMap": "140:157:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:145:3;;;:::i;:::-;;1068:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:18:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1700:145;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1068:85::-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;204:18:1:-;;;;;;;;;;;;;:::o;1994:240:3:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:6:-;639:7;665:10;658:17;;586:96;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:155::-;643:49;686:5;643:49;:::i;:::-;638:3;631:62;621:78;;:::o;705:366::-;;868:67;932:2;927:3;868:67;:::i;:::-;861:74;;944:93;1033:3;944:93;:::i;:::-;1062:2;1057:3;1053:12;1046:19;;851:220;;;:::o;1077:366::-;;1240:67;1304:2;1299:3;1240:67;:::i;:::-;1233:74;;1316:93;1405:3;1316:93;:::i;:::-;1434:2;1429:3;1425:12;1418:19;;1223:220;;;:::o;1449:222::-;;1580:2;1569:9;1565:18;1557:26;;1593:71;1661:1;1650:9;1646:17;1637:6;1593:71;:::i;:::-;1547:124;;;;:::o;1677:246::-;;1820:2;1809:9;1805:18;1797:26;;1833:83;1913:1;1902:9;1898:17;1889:6;1833:83;:::i;:::-;1787:136;;;;:::o;1929:419::-;;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;2100:248;;;:::o;2354:419::-;;2558:2;2547:9;2543:18;2535:26;;2607:9;2601:4;2597:20;2593:1;2582:9;2578:17;2571:47;2635:131;2761:4;2635:131;:::i;:::-;2627:139;;2525:248;;;:::o;2779:169::-;;2897:6;2892:3;2885:19;2937:4;2932:3;2928:14;2913:29;;2875:73;;;;:::o;2954:96::-;;3020:24;3038:5;3020:24;:::i;:::-;3009:35;;2999:51;;;:::o;3056:126::-;;3133:42;3126:5;3122:54;3111:65;;3101:81;;;:::o;3188:150::-;;3283:49;3326:5;3283:49;:::i;:::-;3270:62;;3260:78;;;:::o;3344:125::-;;3439:24;3457:5;3439:24;:::i;:::-;3426:37;;3416:53;;;:::o;3475:225::-;3615:34;3611:1;3603:6;3599:14;3592:58;3684:8;3679:2;3671:6;3667:15;3660:33;3581:119;:::o;3706:182::-;3846:34;3842:1;3834:6;3830:14;3823:58;3812:76;:::o;3894:122::-;3967:24;3985:5;3967:24;:::i;:::-;3960:5;3957:35;3947:2;;4006:1;4003;3996:12;3947:2;3937:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.3;\r\n\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\nimport './Happy.sol';\r\n\r\n\r\ncontract HappyChef is Ownable {\r\n\r\n    // The reward token\r\n    Happy public happy;\r\n\r\n\r\n    constructor(Happy _happy) {\r\n        happy = _happy;\r\n    }\r\n\r\n}",
  "sourcePath": "C:/ws/alyra/dapp-staking/contracts/HappyChef.sol",
  "ast": {
    "absolutePath": "/C/ws/alyra/dapp-staking/contracts/HappyChef.sol",
    "exportedSymbols": {
      "Context": [
        783
      ],
      "ERC20": [
        682
      ],
      "Happy": [
        13
      ],
      "HappyChef": [
        34
      ],
      "IERC20": [
        760
      ],
      "Ownable": [
        181
      ]
    },
    "id": 35,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 182,
        "src": "59:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/ws/alyra/dapp-staking/contracts/Happy.sol",
        "file": "./Happy.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 14,
        "src": "113:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 181,
              "src": "162:7:1"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "162:7:1"
          }
        ],
        "contractDependencies": [
          181,
          783
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 34,
        "linearizedBaseContracts": [
          34,
          181,
          783
        ],
        "name": "HappyChef",
        "nameLocation": "149:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e0d7cb6f",
            "id": 22,
            "mutability": "mutable",
            "name": "happy",
            "nameLocation": "217:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 34,
            "src": "204:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Happy_$13",
              "typeString": "contract Happy"
            },
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "Happy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13,
                "src": "204:5:1"
              },
              "referencedDeclaration": 13,
              "src": "204:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Happy_$13",
                "typeString": "contract Happy"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "259:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28,
                      "name": "happy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "270:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Happy_$13",
                        "typeString": "contract Happy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29,
                      "name": "_happy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "278:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Happy_$13",
                        "typeString": "contract Happy"
                      }
                    },
                    "src": "270:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Happy_$13",
                      "typeString": "contract Happy"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "270:14:1"
                }
              ]
            },
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_happy",
                  "nameLocation": "251:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "245:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Happy_$13",
                    "typeString": "contract Happy"
                  },
                  "typeName": {
                    "id": 24,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23,
                      "name": "Happy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13,
                      "src": "245:5:1"
                    },
                    "referencedDeclaration": 13,
                    "src": "245:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Happy_$13",
                      "typeString": "contract Happy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "244:14:1"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:1"
            },
            "scope": 34,
            "src": "233:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 35,
        "src": "140:157:1"
      }
    ],
    "src": "33:264:1"
  },
  "legacyAST": {
    "absolutePath": "/C/ws/alyra/dapp-staking/contracts/HappyChef.sol",
    "exportedSymbols": {
      "Context": [
        783
      ],
      "ERC20": [
        682
      ],
      "Happy": [
        13
      ],
      "HappyChef": [
        34
      ],
      "IERC20": [
        760
      ],
      "Ownable": [
        181
      ]
    },
    "id": 35,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15,
        "literals": [
          "solidity",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 182,
        "src": "59:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/ws/alyra/dapp-staking/contracts/Happy.sol",
        "file": "./Happy.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 14,
        "src": "113:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 181,
              "src": "162:7:1"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "162:7:1"
          }
        ],
        "contractDependencies": [
          181,
          783
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 34,
        "linearizedBaseContracts": [
          34,
          181,
          783
        ],
        "name": "HappyChef",
        "nameLocation": "149:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e0d7cb6f",
            "id": 22,
            "mutability": "mutable",
            "name": "happy",
            "nameLocation": "217:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 34,
            "src": "204:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Happy_$13",
              "typeString": "contract Happy"
            },
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "Happy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13,
                "src": "204:5:1"
              },
              "referencedDeclaration": 13,
              "src": "204:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Happy_$13",
                "typeString": "contract Happy"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "259:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28,
                      "name": "happy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "270:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Happy_$13",
                        "typeString": "contract Happy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29,
                      "name": "_happy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "278:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Happy_$13",
                        "typeString": "contract Happy"
                      }
                    },
                    "src": "270:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Happy_$13",
                      "typeString": "contract Happy"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "270:14:1"
                }
              ]
            },
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_happy",
                  "nameLocation": "251:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "245:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Happy_$13",
                    "typeString": "contract Happy"
                  },
                  "typeName": {
                    "id": 24,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23,
                      "name": "Happy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13,
                      "src": "245:5:1"
                    },
                    "referencedDeclaration": 13,
                    "src": "245:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Happy_$13",
                      "typeString": "contract Happy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "244:14:1"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:1"
            },
            "scope": 34,
            "src": "233:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 35,
        "src": "140:157:1"
      }
    ],
    "src": "33:264:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xd3DE6E3008560C6Ba4cb7D28d9e12E93889417Af",
      "transactionHash": "0xd4ecc0547c70aab29ea7753f1eaf4437867a710410262757ef6113613991698f"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-07T14:49:50.858Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}